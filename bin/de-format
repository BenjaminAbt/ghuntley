#!/usr/bin/env bash
# Copyright (c) 2020 Geoffrey Huntley <ghuntley@ghuntley.com>. All rights reserved.
# SPDX-License-Identifier: Proprietary

set -Eeuo pipefail

# 1. update copyright headers
echo "[dev-env] Updating copyright headers if required"
command -v copyright-headers >/dev/null 2>&1 || { echo >&2 "[dev-env] ERROR: 'copyright-headers' was not found on your path"; exit 2; }
copyright-headers update "$(git rev-parse --show-toplevel)" # use rev-parse instead of REPO_ROOT as this script maybe running in a submodule.

# 2. nix-format
echo "[dev-env] Formatting *.nix except if the file is located inside third_party/"
command -v nixpkgs-fmt >/dev/null 2>&1 || { echo >&2 "[dev-env] ERROR: 'nixpkgs-fmt' was not found on your path"; exit 2; }

# shellcheck disable=SC2038
find "${REPO_ROOT}" -name "*.nix" | grep -v "/third_party" | xargs -P 32 nixpkgs-fmt

# 3. terraform-fmt
echo "[dev-env] Formatting *.tf"
command -v terraform >/dev/null 2>&1 || { echo >&2 "[dev-env] ERROR: 'terraform' was not found on your path"; exit 2; }

# shellcheck disable=SC2038
terraform fmt "${REPO_ROOT}"

# 4. isort
echo "[dev-env] Sorting imports in *.py"
command -v isort >/dev/null 2>&1 || { echo >&2 "[dev-env] ERROR: 'isort' was not found on your path"; exit 2; }

# shellcheck disable=SC2038
isort "${REPO_ROOT}"

# 5. black
echo "[dev-env] Formatting *.py"
command -v black >/dev/null 2>&1 || { echo >&2 "[dev-env] ERROR: 'black' was not found on your path"; exit 2; }

# shellcheck disable=SC2038
black --exclude "/(\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|\.svn|_build|buck-out|build|dist/third_party/custom_components)/" "${REPO_ROOT}"

# x. ormolu
# ormolu --mode inplace

# x. cabal-fmt
# cabal-fmt --mode inplace

echo "[dev-env] Formatting complete"
